name: puddletag Appimage
concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

on:
  schedule:
    - cron: "0 10 * * 0"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    container: artixlinux/artixlinux:latest
    steps:
    - uses: actions/checkout@v4

    - name: build
      if: always()
      run: |
        sed -i 's/DownloadUser/#DownloadUser/g' /etc/pacman.conf
        pacman -Syu --noconfirm base-devel strace patchelf curl wget \
          desktop-file-utils git artix-archlinux-support mesa xorg-server-xvfb
        pacman-key --init && pacman-key --populate archlinux
        printf "\n[extra]\nInclude = /etc/pacman.d/mirrorlist-arch\n" | tee -a /etc/pacman.conf
        pacman -Syu --noconfirm zsync python musl gtk3 qt5-base qt5-wayland qt5-svg fuse3 qt5ct

        wget --retry-connrefused --tries=30 \
          "https://archive.archlinux.org/packages/p/python/python-3.12.7-1-x86_64.pkg.tar.zst"
        pacman -U --noconfirm python-3.12.7-1-x86_64.pkg.tar.zst

        chmod +x ./puddletag-appimage.sh && ./puddletag-appimage.sh
        mkdir dist
        mv *.AppImage* dist/
        mv *.AppBundle* dist/

    - name: Check version file
      run: |
       cat ~/version
       echo "APP_VERSION=$(cat ~/version)" >> "${GITHUB_ENV}"
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: AppImage
        path: 'dist'
        
    - name: Upload version file
      uses: actions/upload-artifact@v4.6.2
      with:
       name: version
       path: ~/version
    
  release:
      needs: [build]
      permissions: write-all
      runs-on: ubuntu-latest

      steps:
        - uses: actions/download-artifact@v4.1.8
          with:
            name: AppImage
        - uses: actions/download-artifact@v4.1.8
          with:
            name: version

        - name: Read version
          run: |
            cat version
            export VERSION="$(<version)"
            echo "APP_VERSION=${VERSION}" >> "${GITHUB_ENV}"
    
        #Version Release
        - name: Del Previous Release
          run: |
            gh release delete "${APP_VERSION}" --repo "${GITHUB_REPOSITORY}" --cleanup-tag  -y
            sleep 5
          env:
            GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          continue-on-error: true
        - name: Continuous Releaser
          uses: softprops/action-gh-release@v2.2.2
          with:
            name: "puddletag AppImage ${{ env.APP_VERSION }}"
            tag_name: "${{ env.APP_VERSION}}"
            prerelease: false
            draft: false
            generate_release_notes: false
            make_latest: true
            files: |
              *.AppImage*
              *.AppBundle*
          continue-on-error: false

        #Snapshot Release
        - name: Get Date
          run: |
            SNAPSHOT_TAG="$(date --utc +'%Y%m%d-%H%M%S')"
            echo SNAPSHOT_TAG="${SNAPSHOT_TAG}" >> "${GITHUB_ENV}"
          continue-on-error: false
        - name: Snapshot Releaser
          uses: softprops/action-gh-release@v2.2.2
          with:
            name: "Snapshot ${{ env.APP_VERSION }}"
            tag_name: "${{ env.SNAPSHOT_TAG }}"
            prerelease: false
            draft: false
            generate_release_notes: false
            make_latest: false
            files: |
              *.AppImage*
              *.AppBundle*
          continue-on-error: false
